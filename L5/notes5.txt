1. Funtions in JS :
  --> Block of code that performs a specific task, can be involved whenever needed.

  --> console.log() , toUpperCase() , .push() are also functions.
  --> Parantheses "()" is used to invoke function. [usually input is in parantheses]
  
  1. Funtion Definition (What is the work --> eg: telling cook will have some responsibilities) :
    --> function functionName(){
      // do some work
    }

    --> function functionName( param1 , param2 , ...) {
      // do some work
    }


  2. Function Call (For doing the work -->eg: telling the cook to cook something) :
    --> functionName();


  --> Functions reduce REDUNDANCY , in any code redundancy is not good.

  --> Function parameters -> they are like local variables of function -> valid only inside function's block scope 

  

  3. Arrow Functions :
    --> Compact way of writing function   // ( => ) is arrow function 

    --> const functionName = (param1 , param2 , ...) => {
      //do some work
    }

    --> Used widely in modern JS

    --> Here , a variable acts as a function , if only functionName given in console then prints the function definition i.e., the parameters required and inner code ,  but if functionName(param1,param2,..) passed , then we get final O/P 

    --> In the exampke code we can say " arrowSum " is a function variable ; A variable in which a function is stored .

    